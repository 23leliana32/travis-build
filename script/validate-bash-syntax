#!/usr/bin/env bash
set -o errexit

main() {
  local e=0
  local top
  top="$(git rev-parse --show-toplevel)"
  local fake_homedir="${top}/tmp/validate-bash-syntax-homedir"

  cd "${top}"
  mkdir -p "${fake_homedir}"
  export HOME="${fake_homedir}"

  mkdir -p "${HOME}/.travis"
  for f in examples/*.sh.txt; do
    echo >"${HOME}/.travis/job_stages"
    echo "checking bash syntax ${f}"
    bash -n "${f}" || e=$((e + 1))
    if [[ "${f}" == examples/addon* ]]; then
      continue
    fi
    echo "checking bash syntax for stage functions in ${f}"
    sed -e '1,/START_FUNCS/ d' "${f}" | sed -e '/END_FUNCS/,$ d' >"${f%*.txt}"
    rm -f "${HOME}/.travis/job_stages"
    bash -c "
      source ${f%*.txt};
      if [[ -f ${HOME}/.travis/job_stages ]]; then
        source ${HOME}/.travis/job_stages;
      fi
    " || e=$((e + 1))
  done
  test "${e}" -eq 0

  if [[ "${INTEGRATION_SPECS}" != '1' ]]; then
    exit 0
  fi

  e=0
  mkdir -p "${HOME}/.travis"
  for f in examples/*-integration-*.sh.txt; do
    echo >"${HOME}/.travis/job_stages"
    sed -i '/^source $HOME\/\.travis\/job_stages/,$d' "${f}"
    bash --norc -c "
      source ${f} &&
        source ${HOME}/.travis/job_stages || exit 1
    " || e=$((e + 1))
  done
  test "${e}" -eq 0
}

main "${@}"
